#!/usr/bin/env node

'use strict';
import packageJson from '../../package.json' with { type: 'json' };

const getArgs = () =>
  process.argv.reduce((args, arg) => {
    // long arg
    if (arg.slice(0, 2) === '--') {
      const longArg = arg.split('=');
      const longArgFlag = longArg[0].slice(2);
      const longArgValue = longArg.length > 1 ? longArg[1] : true;
      args[longArgFlag] = longArgValue;
    }
    // flags
    else if (arg[0] === '-') {
      const flags = arg.slice(1).split('');
      flags.forEach(flag => {
        args[flag] = true;
      });
    }
    return args;
  }, {});

const args = getArgs();

if (args.h || args.help) {
  console.log(
    [
      'usage: @actual-app/sync-server [options]',
      '',
      'options:',
      '  --config           Path to config file',
      '',
      '  -h --help          Print this list and exit.',
      '  -v --version       Print the version and exit.',
    ].join('\n'),
  );

  process.exit();
}

if (args.v || args.version) {
  console.log('v' + packageJson.version);

  process.exit();
}

// start the sync server
if (args.config) {
  console.log(`Loading config from ${args.config}`);
  process.env.ACTUAL_CONFIG_PATH = args.config;
}

import('../../app.js');
